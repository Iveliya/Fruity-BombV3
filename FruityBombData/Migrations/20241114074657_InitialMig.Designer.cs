// <auto-generated />
using System;
using FruityBombData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FruityBombData.Migrations
{
    [DbContext(typeof(FruityBombDbContext))]
    [Migration("20241114074657_InitialMig")]
    partial class InitialMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FruityBombData.Data.GameResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("BetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("SymbolId1")
                        .HasColumnType("int");

                    b.Property<int>("SymbolId2")
                        .HasColumnType("int");

                    b.Property<int>("SymbolId3")
                        .HasColumnType("int");

                    b.Property<int>("SymbolId4")
                        .HasColumnType("int");

                    b.Property<decimal>("WinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SymbolId1");

                    b.HasIndex("SymbolId2");

                    b.HasIndex("SymbolId3");

                    b.HasIndex("SymbolId4");

                    b.ToTable("GameResultss");
                });

            modelBuilder.Entity("FruityBombData.Data.PayoutRules", b =>
                {
                    b.Property<int>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RuleId"), 1L, 1);

                    b.Property<string>("Combination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PayoutAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("RuleId");

                    b.ToTable("PayoutRuless");
                });

            modelBuilder.Entity("FruityBombData.Data.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("FruityBombData.Data.Symbol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Payout")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Symbols");
                });

            modelBuilder.Entity("FruityBombData.Data.GameResult", b =>
                {
                    b.HasOne("FruityBombData.Data.Player", null)
                        .WithMany("Results")
                        .HasForeignKey("PlayerId");

                    b.HasOne("FruityBombData.Data.Symbol", "Symbol1")
                        .WithMany("GameResults1")
                        .HasForeignKey("SymbolId1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FruityBombData.Data.Symbol", "Symbol2")
                        .WithMany("GameResults2")
                        .HasForeignKey("SymbolId2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FruityBombData.Data.Symbol", "Symbol3")
                        .WithMany("GameResults3")
                        .HasForeignKey("SymbolId3")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FruityBombData.Data.Symbol", "Symbol4")
                        .WithMany("GameResults4")
                        .HasForeignKey("SymbolId4")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Symbol1");

                    b.Navigation("Symbol2");

                    b.Navigation("Symbol3");

                    b.Navigation("Symbol4");
                });

            modelBuilder.Entity("FruityBombData.Data.Player", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("FruityBombData.Data.Symbol", b =>
                {
                    b.Navigation("GameResults1");

                    b.Navigation("GameResults2");

                    b.Navigation("GameResults3");

                    b.Navigation("GameResults4");
                });
#pragma warning restore 612, 618
        }
    }
}
